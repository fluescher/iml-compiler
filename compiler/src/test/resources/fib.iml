program fibonacci
global
	fun fib(i: int32)
	returns r: int32
	global in a
	requires [ isPos(i) ]
	ensures [ r >= old(i-1) ]
	{
		if(i = 0) {
			r init := 0
		} else {
			if(i = 1){
				r init := 1
			} else {
				r init := fib(i - 1) + fib(i - 2)
			}
		}
	};
	
	fun isPos(i:int32)
	returns b: bool
	{
		b init := i >= 0 
	};
	
	proc sum(a: int32, b: int32, out var r: int32)
	{
		skip
	};
	
	proc add(a: int32, b: int32, out r: int32)
	ensures [ r >= old(a) ]
	{
		call sum(a,b,r init)
	};
	
	var a: int32;
	var b: int32;
	var r: int32
{
	? a init;
	? b init;
	call add(a,b,r init);
	! r	
}