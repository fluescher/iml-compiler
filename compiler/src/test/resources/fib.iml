program fibonacci
global
	fun fib(i: int32)
	returns r: int32
	requires [ isPos(i): InputHasToBePositive ]
	ensures [ r >= old(i-1) ]
	{
		if(i = 0) {
			r init := 0
		} else {
			if(i = 1){
				r init := 1
			} else {
				r init := fib(i - 1) + fib(i - 2)
			}
		}
	};
	
	fun isPos(i:int32)
	returns b: bool
	{
		b init := i >= 0 
	};
	
	proc sum(a: int32, b: int32, out var r: int32)
	{
		r init := 2 + 2 * 3 + 2 + 1
	};
	
	proc add(a: int32, b: int32, out r: int32)
	ensures [ r >= old(a) ]
	{
		call sum(a,b,r init)
	};
	
	var a: int32;
	var b: int32;
	var r: int32
{
	call sum(12, 3, a init);
	!a
}